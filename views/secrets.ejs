<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <title>Secrets | Feed</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet">
  <link rel="stylesheet" href="/styles.css">
  <style>
    .container-narrow{max-width:980px}
    .avatar{width:40px;height:40px;border-radius:10px;display:flex;align-items:center;justify-content:center;font-weight:700;color:#fff}
    .card-hover:hover{transform:translateY(-1px);transition:transform .1s ease}
    .separator{height:1px;background:#eee;margin-top:.75rem;margin-bottom:.5rem}
    .btn-soft{background:#f6f7fb;border:1px solid #e6e7ee}
    .btn-ghost{background:transparent;border:1px solid #e6e7ee}
    .badge-soft{background:#f3f4f6;border:1px solid #e5e7eb}
  </style>
</head>
<body>
  <%- include('./partials/header.ejs') %>

  <main class="container container-narrow py-4">
    <div class="d-flex flex-wrap gap-2 align-items-center mb-3">
      <h1 class="display-6 fw-semibold m-0">Secrets Shared by Users</h1>
      <div class="ms-auto d-flex flex-wrap gap-2">
        <a class="btn btn-primary" href="/submit"><i class="bi bi-plus-circle"></i> Submit New Secret</a>
        <a class="btn btn-soft" href="/me"><i class="bi bi-person"></i> My Secrets</a>
        <a class="btn btn-soft" href="/change-password"><i class="bi bi-key"></i> Change Password</a>
        <a class="btn btn-ghost" href="/logout"><i class="bi bi-box-arrow-right"></i> Logout</a>
      </div>
    </div>

    <!-- Filters -->
    <form id="filterForm" class="row gy-2 gx-2 align-items-end mb-4" method="get" action="/secrets">
      <div class="col-12 col-md-6">
        <label class="form-label mb-1" for="q">Search (text or summary)</label>
        <input id="q" class="form-control" type="search" name="q" placeholder="e.g., exam, office, sorry"
               value="<%= (typeof q !== 'undefined' && q) ? q : '' %>">
      </div>
      <div class="col-6 col-md-3">
        <label class="form-label mb-1" for="cat">Category</label>
        <select id="cat" class="form-select" name="cat">
          <option value="">All</option>
          <% (["Work","Family","Finance","Health","School","Advice","Confession","Other"]).forEach(function(c){ %>
            <option value="<%= c %>" <%= (cat===c?'selected':'') %>><%= c %></option>
          <% }) %>
        </select>
      </div>
      <div class="col-6 col-md-2">
        <label class="form-label mb-1" for="limit">Per Page</label>
        <select id="limit" class="form-select" name="limit">
          <% [10,20,30,50].forEach(function(n){ %>
            <option value="<%= n %>" <%= (Number(limit)===n?'selected':'') %>><%= n %></option>
          <% }) %>
        </select>
      </div>
      <div class="col-12 col-md-1 d-grid">
        <button class="btn btn-outline-secondary" type="submit"><i class="bi bi-search"></i></button>
      </div>
    </form>

    <!-- Initial page render -->
    <div id="feed" class="vstack gap-3">
      <% (secrets || []).forEach(function (obj) { %>
        <%- include('./partials/secret-card.ejs', { obj, currentUserId }) %>
      <% }) %>
    </div>

    <!-- Infinite scroll sentinel -->
    <div id="sentinel" class="py-4 text-center text-muted">Loading more…</div>
  </main>

  <%- include('./partials/footer.ejs') %>

  <script>
    // Infinite Scroll
    const params = new URLSearchParams(window.location.search);
    let page   = 1;
    const limit = Number(params.get('limit') || '<%= Number(limit||10) %>') || 10;
    const q     = params.get('q')   || '<%= (q||"").replace(/"/g, "&quot;") %>';
    const cat   = params.get('cat') || '<%= (cat||"").replace(/"/g, "&quot;") %>';
    const sentinel = document.getElementById('sentinel');
    let loading = false;
    let done = <%= (typeof totalPages !== 'undefined' && Number(totalPages) <= 1) ? 'true' : 'false' %>;

    if (done) sentinel.textContent = 'No more';

    async function loadMore() {
      if (loading || done) return;
      loading = true;
      page++;
      const url = `/api/secrets?page=${page}&limit=${limit}&q=${encodeURIComponent(q)}&cat=${encodeURIComponent(cat)}`;
      try {
        const res = await fetch(url, { headers: { 'Accept':'application/json' } });
        if (!res.ok) { loading = false; return; }
        const { items, totalPages } = await res.json();
        if (!items || !items.length) { done = true; sentinel.textContent = 'No more'; return; }
        items.forEach(renderCard);
        if (page >= Number(totalPages || 1)) { done = true; sentinel.textContent = 'No more'; }
      } catch(_) {
      } finally {
        loading = false;
      }
    }

    function renderCard(item) {
      const catIcon = item.icon || 'tag';
      const initials = (item.username||'U').charAt(0).toUpperCase();
      const when = item.createdAt
        ? new Date(item.createdAt).toLocaleString("en-IN",{dateStyle:"medium",timeStyle:"short"})
        : "";

      const card = document.createElement('div');
      card.className = 'card card-hover shadow-sm';
      card.innerHTML = `
        <div class="card-body">
          <div class="d-flex gap-3">
            <div class="avatar flex-shrink-0" style="background:${item.avatarColor||'#667'}">${initials}</div>
            <div class="w-100">
              <div class="d-flex justify-content-between align-items-start">
                <div class="fw-semibold text-primary">${item.username||'User'}</div>
                <div class="meta text-nowrap text-muted small">
                  ${when ? `<i class="bi bi-clock"></i> ${when}` : ``}
                </div>
              </div>
              <div class="mt-2 mb-2">
                <span class="badge bg-secondary-subtle text-secondary-emphasis me-2"><i class="bi bi-stars"></i> Summary</span>
                ${item.aiSummary ? `<span class="text-secondary">${item.aiSummary}</span>` : `<span class="text-muted fst-italic">Processing…</span>`}
              </div>
              <div class="mb-2">${item.text || ""}</div>
              <div class="d-flex align-items-center gap-2">
                <span class="badge bg-light text-dark border"><i class="bi bi-${catIcon}"></i> ${item.aiCategory || 'Other'}</span>
                ${item.aiSource ? `<span class="badge bg-light text-muted border"><i class="bi bi-cpu"></i> ${item.aiSource}</span>` : ""}
              </div>
              <div class="separator"></div>
            </div>
          </div>
        </div>`;
      document.getElementById('feed').appendChild(card);
    }

    const io = new IntersectionObserver((entries) => {
      entries.forEach(entry => { if (entry.isIntersecting) loadMore(); });
    }, { rootMargin: '600px 0px 0px 0px' });
    io.observe(sentinel);
  </script>
</body>
</html>
